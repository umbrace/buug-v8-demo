@inherits Umbraco.Web.Mvc.UmbracoViewPage
@{
    Layout = null;
}<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

		<title>@Model.Name</title>

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<link rel="stylesheet" href="/css/reveal.min.css">
		<link rel="stylesheet" href="/css/theme/default.css" id="theme">

		<!-- For syntax highlighting -->
		<link rel="stylesheet" href="/lib/css/zenburn.css">

		<!-- If the query includes 'print-pdf', use the PDF print sheet -->
		<script>
			document.write( '<link rel="stylesheet" href="/css/print/' + ( window.location.search.match( /print-pdf/gi ) ? 'pdf' : 'paper' ) + '.css" type="text/css" media="print">' );
		</script>
		
		<style type="text/css">
			.reveal section img { border: none; box-shadow: none; }
		</style>
		
		<!--[if lt IE 9]>
		<script src="/lib/js/html5shiv.js"></script>
		<![endif]-->
	</head>

	<body>

		<div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">

                @*<section>
                    <h1>Umbraco v8</h1>
                    <hr />
                    <h4>XX months work in 20 minutes</h4>
                </section>*@
				
				@foreach(var slide in Model.Children) 
				{
					if(slide.Children.Any()) 
					{
						<section>
							@RenderSlide(slide)
							
							@foreach(var subSlide in slide.Children) 
							{
								@RenderSlide(subSlide)
							}
						</section>
					} 
					else 
					{
						@RenderSlide(slide)
					}
				}

			</div>

		</div>

		<script src="/lib/js/head.min.js"></script>
		<script src="/js/reveal.min.js"></script>

		<script>

			// Full list of configuration options available here:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				theme: Reveal.getQueryHash().theme || 'moon', // available themes are in /css/theme
				transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/fade/none

				// Optional libraries used to extend on reveal.js
				dependencies: [
					{ src: '/lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: '/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: '/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: '/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: '/plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
					{ src: '/plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
				]
			});

		</script>

	</body>
</html>
			
@helper RenderSlide(dynamic slide)
{
	<section>
		@*<h2>@slide.Name</h2>*@
		@slide.BodyText
        <aside class="notes">
            @slide.SpeakerNotes
        </aside>
	</section>
}